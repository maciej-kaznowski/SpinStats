/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.github.maciej.kaznowski.intervalsicuclient.model

import com.github.maciej.kaznowski.intervalsicuclient.model.ChatMember
import com.github.maciej.kaznowski.intervalsicuclient.model.Folder

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param type 
 * @param updated 
 * @param name 
 * @param picture 
 * @param description 
 * @param url 
 * @param slug 
 * @param pub 
 * @param joinPolicy 
 * @param sidebarLogo 
 * @param sidebarColor 
 * @param sidebarDark 
 * @param sidebarTopColor 
 * @param hideMembers 
 * @param primaryGroup 
 * @param members 
 * @param athleteId 
 * @param activityId 
 * @param otherAthleteId 
 * @param otherAthleteSex 
 * @param followsYou 
 * @param youFollow 
 * @param role 
 * @param newMessageCount 
 * @param kicked 
 * @param kickedById 
 * @param lastSeenMessageId 
 * @param muteUntil 
 * @param sharedFolders 
 */
@JsonClass(generateAdapter = true)

data class Chat (

    @Json(name = "id")
    val id: kotlin.Int? = null,

    @Json(name = "type")
    val type: Chat.Type? = null,

    @Json(name = "updated")
    val updated: java.time.OffsetDateTime? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "picture")
    val picture: kotlin.String? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "url")
    val url: kotlin.String? = null,

    @Json(name = "slug")
    val slug: kotlin.String? = null,

    @Json(name = "pub")
    val pub: kotlin.Boolean? = null,

    @Json(name = "join_policy")
    val joinPolicy: Chat.JoinPolicy? = null,

    @Json(name = "sidebar_logo")
    val sidebarLogo: kotlin.String? = null,

    @Json(name = "sidebar_color")
    val sidebarColor: kotlin.String? = null,

    @Json(name = "sidebar_dark")
    val sidebarDark: kotlin.Boolean? = null,

    @Json(name = "sidebar_top_color")
    val sidebarTopColor: kotlin.String? = null,

    @Json(name = "hide_members")
    val hideMembers: kotlin.Boolean? = null,

    @Json(name = "primary_group")
    val primaryGroup: kotlin.Boolean? = null,

    @Json(name = "members")
    val members: kotlin.collections.List<ChatMember>? = null,

    @Json(name = "athlete_id")
    val athleteId: kotlin.String? = null,

    @Json(name = "activity_id")
    val activityId: kotlin.String? = null,

    @Json(name = "other_athlete_id")
    val otherAthleteId: kotlin.String? = null,

    @Json(name = "other_athlete_sex")
    val otherAthleteSex: kotlin.String? = null,

    @Json(name = "follows_you")
    val followsYou: kotlin.String? = null,

    @Json(name = "you_follow")
    val youFollow: kotlin.String? = null,

    @Json(name = "role")
    val role: Chat.Role? = null,

    @Json(name = "new_message_count")
    val newMessageCount: kotlin.Int? = null,

    @Json(name = "kicked")
    val kicked: java.time.OffsetDateTime? = null,

    @Json(name = "kicked_by_id")
    val kickedById: kotlin.String? = null,

    @Json(name = "last_seen_message_id")
    val lastSeenMessageId: kotlin.Long? = null,

    @Json(name = "mute_until")
    val muteUntil: java.time.OffsetDateTime? = null,

    @Json(name = "sharedFolders")
    val sharedFolders: kotlin.collections.List<Folder>? = null

) {

    /**
     * 
     *
     * Values: PRIVATE,GROUP,ACTIVITY
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "PRIVATE") PRIVATE("PRIVATE"),
        @Json(name = "GROUP") GROUP("GROUP"),
        @Json(name = "ACTIVITY") ACTIVITY("ACTIVITY");
    }
    /**
     * 
     *
     * Values: OPEN,ASK,INVITE_ONLY
     */
    @JsonClass(generateAdapter = false)
    enum class JoinPolicy(val value: kotlin.String) {
        @Json(name = "OPEN") OPEN("OPEN"),
        @Json(name = "ASK") ASK("ASK"),
        @Json(name = "INVITE_ONLY") INVITE_ONLY("INVITE_ONLY");
    }
    /**
     * 
     *
     * Values: MEMBER,ADMIN
     */
    @JsonClass(generateAdapter = false)
    enum class Role(val value: kotlin.String) {
        @Json(name = "MEMBER") MEMBER("MEMBER"),
        @Json(name = "ADMIN") ADMIN("ADMIN");
    }
}

