/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.github.maciej.kaznowski.intervalsicuclient.model

import com.github.maciej.kaznowski.intervalsicuclient.model.Attachment

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param athleteId 
 * @param id 
 * @param icuTrainingLoad 
 * @param name 
 * @param description 
 * @param type 
 * @param indoor 
 * @param color 
 * @param movingTime 
 * @param updated 
 * @param joules 
 * @param joulesAboveFtp 
 * @param workoutDoc 
 * @param folderId 
 * @param day 
 * @param days 
 * @param planApplied 
 * @param hideFromAthlete 
 * @param target 
 * @param targets 
 * @param tags 
 * @param attachments 
 * @param time 
 * @param distance 
 * @param icuIntensity 
 */
@JsonClass(generateAdapter = true)

data class Workout (

    @Json(name = "athlete_id")
    val athleteId: kotlin.String? = null,

    @Json(name = "id")
    val id: kotlin.Int? = null,

    @Json(name = "icu_training_load")
    val icuTrainingLoad: kotlin.Int? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "type")
    val type: kotlin.String? = null,

    @Json(name = "indoor")
    val indoor: kotlin.Boolean? = null,

    @Json(name = "color")
    val color: kotlin.String? = null,

    @Json(name = "moving_time")
    val movingTime: kotlin.Int? = null,

    @Json(name = "updated")
    val updated: java.time.OffsetDateTime? = null,

    @Json(name = "joules")
    val joules: kotlin.Int? = null,

    @Json(name = "joules_above_ftp")
    val joulesAboveFtp: kotlin.Int? = null,

    @Json(name = "workout_doc")
    val workoutDoc: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @Json(name = "folder_id")
    val folderId: kotlin.Int? = null,

    @Json(name = "day")
    val day: kotlin.Int? = null,

    @Json(name = "days")
    val days: kotlin.Int? = null,

    @Json(name = "plan_applied")
    val planApplied: java.time.OffsetDateTime? = null,

    @Json(name = "hide_from_athlete")
    val hideFromAthlete: kotlin.Boolean? = null,

    @Json(name = "target")
    val target: Workout.Target? = null,

    @Json(name = "targets")
    val targets: kotlin.collections.List<Workout.Targets>? = null,

    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "attachments")
    val attachments: kotlin.collections.List<Attachment>? = null,

    @Json(name = "time")
    val time: kotlin.String? = null,

    @Json(name = "distance")
    val distance: kotlin.Float? = null,

    @Json(name = "icu_intensity")
    val icuIntensity: kotlin.Float? = null

) {

    /**
     * 
     *
     * Values: AUTO,POWER,HR,PACE
     */
    @JsonClass(generateAdapter = false)
    enum class Target(val value: kotlin.String) {
        @Json(name = "AUTO") AUTO("AUTO"),
        @Json(name = "POWER") POWER("POWER"),
        @Json(name = "HR") HR("HR"),
        @Json(name = "PACE") PACE("PACE");
    }
    /**
     * 
     *
     * Values: AUTO,POWER,HR,PACE
     */
    @JsonClass(generateAdapter = false)
    enum class Targets(val value: kotlin.String) {
        @Json(name = "AUTO") AUTO("AUTO"),
        @Json(name = "POWER") POWER("POWER"),
        @Json(name = "HR") HR("HR"),
        @Json(name = "PACE") PACE("PACE");
    }
}

