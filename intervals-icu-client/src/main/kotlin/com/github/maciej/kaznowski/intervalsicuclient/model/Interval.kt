/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.github.maciej.kaznowski.intervalsicuclient.model


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param startIndex 
 * @param distance 
 * @param movingTime 
 * @param elapsedTime 
 * @param averageWatts 
 * @param averageWattsAlt 
 * @param averageWattsAltAcc 
 * @param minWatts 
 * @param maxWatts 
 * @param averageWattsKg 
 * @param maxWattsKg 
 * @param intensity 
 * @param w5sVariability 
 * @param weightedAverageWatts 
 * @param trainingLoad 
 * @param joules 
 * @param joulesAboveFtp 
 * @param decoupling 
 * @param avgLrBalance 
 * @param averageDfaA1 
 * @param averageRespiration 
 * @param averageEpoc 
 * @param wbalStart 
 * @param wbalEnd 
 * @param zone 
 * @param zoneMinWatts 
 * @param zoneMaxWatts 
 * @param averageSpeed 
 * @param minSpeed 
 * @param maxSpeed 
 * @param gap 
 * @param averageHeartrate 
 * @param minHeartrate 
 * @param maxHeartrate 
 * @param averageCadence 
 * @param minCadence 
 * @param maxCadence 
 * @param averageTorque 
 * @param minTorque 
 * @param maxTorque 
 * @param totalElevationGain 
 * @param minAltitude 
 * @param maxAltitude 
 * @param averageGradient 
 * @param averageSmo2 
 * @param averageThb 
 * @param averageSmo22 
 * @param averageThb2 
 * @param id 
 * @param type 
 * @param endIndex 
 * @param groupId 
 * @param segmentEffortIds 
 * @param startTime 
 * @param endTime 
 * @param label 
 * @param averageStride 
 */
@JsonClass(generateAdapter = true)

data class Interval (

    @Json(name = "start_index")
    val startIndex: kotlin.Int? = null,

    @Json(name = "distance")
    val distance: kotlin.Float? = null,

    @Json(name = "moving_time")
    val movingTime: kotlin.Int? = null,

    @Json(name = "elapsed_time")
    val elapsedTime: kotlin.Int? = null,

    @Json(name = "average_watts")
    val averageWatts: kotlin.Int? = null,

    @Json(name = "average_watts_alt")
    val averageWattsAlt: kotlin.Int? = null,

    @Json(name = "average_watts_alt_acc")
    val averageWattsAltAcc: kotlin.Int? = null,

    @Json(name = "min_watts")
    val minWatts: kotlin.Int? = null,

    @Json(name = "max_watts")
    val maxWatts: kotlin.Int? = null,

    @Json(name = "average_watts_kg")
    val averageWattsKg: kotlin.Float? = null,

    @Json(name = "max_watts_kg")
    val maxWattsKg: kotlin.Float? = null,

    @Json(name = "intensity")
    val intensity: kotlin.Int? = null,

    @Json(name = "w5s_variability")
    val w5sVariability: kotlin.Float? = null,

    @Json(name = "weighted_average_watts")
    val weightedAverageWatts: kotlin.Int? = null,

    @Json(name = "training_load")
    val trainingLoad: kotlin.Float? = null,

    @Json(name = "joules")
    val joules: kotlin.Int? = null,

    @Json(name = "joules_above_ftp")
    val joulesAboveFtp: kotlin.Int? = null,

    @Json(name = "decoupling")
    val decoupling: kotlin.Float? = null,

    @Json(name = "avg_lr_balance")
    val avgLrBalance: kotlin.Float? = null,

    @Json(name = "average_dfa_a1")
    val averageDfaA1: kotlin.Float? = null,

    @Json(name = "average_respiration")
    val averageRespiration: kotlin.Float? = null,

    @Json(name = "average_epoc")
    val averageEpoc: kotlin.Float? = null,

    @Json(name = "wbal_start")
    val wbalStart: kotlin.Int? = null,

    @Json(name = "wbal_end")
    val wbalEnd: kotlin.Int? = null,

    @Json(name = "zone")
    val zone: kotlin.Int? = null,

    @Json(name = "zone_min_watts")
    val zoneMinWatts: kotlin.Int? = null,

    @Json(name = "zone_max_watts")
    val zoneMaxWatts: kotlin.Int? = null,

    @Json(name = "average_speed")
    val averageSpeed: kotlin.Float? = null,

    @Json(name = "min_speed")
    val minSpeed: kotlin.Float? = null,

    @Json(name = "max_speed")
    val maxSpeed: kotlin.Float? = null,

    @Json(name = "gap")
    val gap: kotlin.Float? = null,

    @Json(name = "average_heartrate")
    val averageHeartrate: kotlin.Int? = null,

    @Json(name = "min_heartrate")
    val minHeartrate: kotlin.Int? = null,

    @Json(name = "max_heartrate")
    val maxHeartrate: kotlin.Int? = null,

    @Json(name = "average_cadence")
    val averageCadence: kotlin.Float? = null,

    @Json(name = "min_cadence")
    val minCadence: kotlin.Int? = null,

    @Json(name = "max_cadence")
    val maxCadence: kotlin.Int? = null,

    @Json(name = "average_torque")
    val averageTorque: kotlin.Float? = null,

    @Json(name = "min_torque")
    val minTorque: kotlin.Float? = null,

    @Json(name = "max_torque")
    val maxTorque: kotlin.Float? = null,

    @Json(name = "total_elevation_gain")
    val totalElevationGain: kotlin.Float? = null,

    @Json(name = "min_altitude")
    val minAltitude: kotlin.Float? = null,

    @Json(name = "max_altitude")
    val maxAltitude: kotlin.Float? = null,

    @Json(name = "average_gradient")
    val averageGradient: kotlin.Float? = null,

    @Json(name = "average_smo2")
    val averageSmo2: kotlin.Float? = null,

    @Json(name = "average_thb")
    val averageThb: kotlin.Float? = null,

    @Json(name = "average_smo2_2")
    val averageSmo22: kotlin.Float? = null,

    @Json(name = "average_thb_2")
    val averageThb2: kotlin.Float? = null,

    @Json(name = "id")
    val id: kotlin.Int? = null,

    @Json(name = "type")
    val type: Interval.Type? = null,

    @Json(name = "end_index")
    val endIndex: kotlin.Int? = null,

    @Json(name = "group_id")
    val groupId: kotlin.String? = null,

    @Json(name = "segment_effort_ids")
    val segmentEffortIds: kotlin.collections.List<kotlin.Long>? = null,

    @Json(name = "start_time")
    val startTime: kotlin.Int? = null,

    @Json(name = "end_time")
    val endTime: kotlin.Int? = null,

    @Json(name = "label")
    val label: kotlin.String? = null,

    @Json(name = "average_stride")
    val averageStride: kotlin.Float? = null

) {

    /**
     * 
     *
     * Values: RECOVERY,WORK
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "RECOVERY") RECOVERY("RECOVERY"),
        @Json(name = "WORK") WORK("WORK");
    }
}

