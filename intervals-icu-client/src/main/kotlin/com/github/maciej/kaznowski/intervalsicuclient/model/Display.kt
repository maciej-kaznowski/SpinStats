/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.github.maciej.kaznowski.intervalsicuclient.model


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param colorScheme 
 * @param lowIntensity 
 * @param highIntensity 
 * @param lowLoad 
 * @param highLoad 
 * @param usePairedWorkoutColor 
 * @param ignoreWorkoutColors 
 * @param showAverageHR 
 * @param showNormalizedWatts 
 * @param showLoad 
 * @param showWork 
 * @param showWorkAboveFTP 
 * @param showWeightLifted 
 * @param showAveragePower 
 * @param showRPE 
 * @param showFeel 
 * @param showPace 
 * @param showGAP 
 * @param showIntensity 
 * @param showName 
 * @param showIntervals 
 * @param showSkylineChart 
 * @param showPairedWorkoutChart 
 * @param showDescription 
 * @param showStartTime 
 * @param preciseDistance 
 * @param color 
 * @param color2 
 */
@JsonClass(generateAdapter = true)

data class Display (

    @Json(name = "colorScheme")
    val colorScheme: kotlin.String? = null,

    @Json(name = "lowIntensity")
    val lowIntensity: kotlin.Int? = null,

    @Json(name = "highIntensity")
    val highIntensity: kotlin.Int? = null,

    @Json(name = "lowLoad")
    val lowLoad: kotlin.Int? = null,

    @Json(name = "highLoad")
    val highLoad: kotlin.Int? = null,

    @Json(name = "usePairedWorkoutColor")
    val usePairedWorkoutColor: kotlin.Boolean? = null,

    @Json(name = "ignoreWorkoutColors")
    val ignoreWorkoutColors: kotlin.Boolean? = null,

    @Json(name = "showAverageHR")
    val showAverageHR: kotlin.Boolean? = null,

    @Json(name = "showNormalizedWatts")
    val showNormalizedWatts: kotlin.Boolean? = null,

    @Json(name = "showLoad")
    val showLoad: kotlin.Boolean? = null,

    @Json(name = "showWork")
    val showWork: kotlin.Boolean? = null,

    @Json(name = "showWorkAboveFTP")
    val showWorkAboveFTP: kotlin.Boolean? = null,

    @Json(name = "showWeightLifted")
    val showWeightLifted: kotlin.Boolean? = null,

    @Json(name = "showAveragePower")
    val showAveragePower: kotlin.Boolean? = null,

    @Json(name = "showRPE")
    val showRPE: kotlin.Boolean? = null,

    @Json(name = "showFeel")
    val showFeel: kotlin.Boolean? = null,

    @Json(name = "showPace")
    val showPace: kotlin.Boolean? = null,

    @Json(name = "showGAP")
    val showGAP: kotlin.Boolean? = null,

    @Json(name = "showIntensity")
    val showIntensity: kotlin.Boolean? = null,

    @Json(name = "showName")
    val showName: kotlin.Boolean? = null,

    @Json(name = "showIntervals")
    val showIntervals: kotlin.Boolean? = null,

    @Json(name = "showSkylineChart")
    val showSkylineChart: kotlin.Boolean? = null,

    @Json(name = "showPairedWorkoutChart")
    val showPairedWorkoutChart: kotlin.Boolean? = null,

    @Json(name = "showDescription")
    val showDescription: kotlin.Boolean? = null,

    @Json(name = "showStartTime")
    val showStartTime: kotlin.Boolean? = null,

    @Json(name = "preciseDistance")
    val preciseDistance: kotlin.Boolean? = null,

    @Json(name = "color")
    val color: kotlin.String? = null,

    @Json(name = "color2")
    val color2: kotlin.String? = null

)

